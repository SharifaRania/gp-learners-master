{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 Courier-Bold;
\f3\froman\fcharset0 Times-Roman;\f4\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf0 SRLearnerMenuManager.java\
\
\
SymbRegMOO\
\
SRJava - modified 1.1 - wrong\
\pard\pardeftab720\partightenfactor0
\cf0 SRCuda - modified 1.2 - wrong\
\pard\pardeftab720\partightenfactor0
\cf0 SRCpp - modified 1.3 - wrong\
\
\
DataJava.java\
DataCude.java - modified 2.1\
\pard\pardeftab720\partightenfactor0
\cf0 DataCpp.java - modified 2.2\
\
Manifest.mf - modified\
Main-Class: main.SRLearnerMenuManager\
\
\
src/main/SRLearnerMenuManager.java\
javac -d bin $(find src -name "*.java")\
bin/main/SRLearnerMenuManager.class\
\
\
jar cfm my_sr.jar META-INF/MANIFEST.MF -C bin/ .\
\
java -jar my_sr.jar -train sample0.csv -minutes 10\
\
\
\pard\pardeftab720\sa280\partightenfactor0

\f1\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The Transition:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\fs24 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 scaled_val
\f1  to 
\f2 predictions[]
\f3\b0 : Instead of scaling each predicted value, you now directly store each prediction in the 
\f4 predictions[]
\f3  array.\
\ls1\ilvl0
\f2\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 targetAux
\f1  to 
\f2 actualValues[]
\f3\b0 : This remains largely the same, as 
\f4 targetAux
\f3  was just the array returned by 
\f4 getTarget()
\f3 .\
}